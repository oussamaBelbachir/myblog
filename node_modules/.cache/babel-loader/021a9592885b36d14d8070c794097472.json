{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/houd/myBlog/src/pages/contact/contact.page.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './contact.styles.scss';\nimport Button from '../../components/button/button.components';\nimport FormInput2 from '../../components/formInput2/formInput2.component';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  message: yup.string().required()\n});\nconst inputs = [{\n  label: \"name\",\n  name: \"name\",\n  type: \"name\"\n}, {\n  label: \"email\",\n  name: \"email\",\n  type: \"email\"\n}, {\n  label: \"message\",\n  name: \"message\",\n  type: \"message\"\n}];\n\nfunction Contact() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"form\",\n      children: [inputs.map((input, key) => /*#__PURE__*/_jsxDEV(FormInput2, {\n        label: input.name,\n        type: input.type,\n        re: register(input.name),\n        errors: errors,\n        textarea: input.name === \"message\" ? true : false\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        loading: true,\n        width: \"100%\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Contact, \"WHaVwssZLu1rCfGNfxaID+Jeqfg=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/mac/Desktop/houd/myBlog/src/pages/contact/contact.page.jsx"],"names":["React","Button","FormInput2","useForm","yupResolver","yup","schema","object","shape","name","string","required","email","message","inputs","label","type","Contact","register","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","map","input","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AAGA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC9BC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,EADwB;AAE9BC,EAAAA,KAAK,EAAEP,GAAG,CAACK,MAAJ,GAAaC,QAAb,EAFuB;AAG9BE,EAAAA,OAAO,EAAER,GAAG,CAACK,MAAJ,GAAaC,QAAb;AAHqB,CAAnB,CAAf;AAMA,MAAMG,MAAM,GAAG,CACX;AACIC,EAAAA,KAAK,EAAG,MADZ;AAEIN,EAAAA,IAAI,EAAG,MAFX;AAGIO,EAAAA,IAAI,EAAG;AAHX,CADW,EAMX;AACID,EAAAA,KAAK,EAAG,OADZ;AAEIN,EAAAA,IAAI,EAAG,OAFX;AAGIO,EAAAA,IAAI,EAAG;AAHX,CANW,EAWX;AACID,EAAAA,KAAK,EAAG,SADZ;AAEIN,EAAAA,IAAI,EAAG,SAFX;AAGIO,EAAAA,IAAI,EAAG;AAHX,CAXW,CAAf;;AAkBA,SAASC,OAAT,GAAmB;AAAA;;AAEf,QAAM;AAACC,IAAAA,QAAD;AAAYC,IAAAA,YAAZ;AAA2BC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAtC,MAAoDlB,OAAO,CAAC;AAC9DmB,IAAAA,QAAQ,EAAGlB,WAAW,CAACE,MAAD;AADwC,GAAD,CAAjE;;AAKA,QAAMiB,QAAQ,GAAGC,IAAI,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAM,MAAA,QAAQ,EAAEL,YAAY,CAACI,QAAD,CAA5B;AAAwC,MAAA,SAAS,EAAC,MAAlD;AAAA,iBAEIT,MAAM,CAACa,GAAP,CAAW,CAACC,KAAD,EAAOC,GAAP,kBACX,QAAC,UAAD;AACI,QAAA,KAAK,EAAID,KAAK,CAACnB,IADnB;AAEI,QAAA,IAAI,EAAImB,KAAK,CAACZ,IAFlB;AAGI,QAAA,EAAE,EAAIE,QAAQ,CAACU,KAAK,CAACnB,IAAP,CAHlB;AAII,QAAA,MAAM,EAAIY,MAJd;AAMI,QAAA,QAAQ,EAAIO,KAAK,CAACnB,IAAN,KAAe,SAAf,GAA2B,IAA3B,GAAkC;AANlD,SAKSoB,GALT;AAAA;AAAA;AAAA;AAAA,cADA,CAFJ,eAaA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,IAAjB;AAAuB,QAAA,KAAK,EAAE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GAnCQZ,O;UAEqDd,O;;;KAFrDc,O;AAqCT,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport './contact.styles.scss';\nimport Button from '../../components/button/button.components';\nimport FormInput2 from '../../components/formInput2/formInput2.component';\n\n\nimport {useForm} from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().required(),\n    message: yup.string().required(),\n});\n\nconst inputs = [\n    {\n        label : \"name\",\n        name : \"name\",\n        type : \"name\",\n    },\n    {\n        label : \"email\",\n        name : \"email\",\n        type : \"email\",\n    },\n    {\n        label : \"message\",\n        name : \"message\",\n        type : \"message\",\n    }\n]\n\nfunction Contact() {\n\n    const {register , handleSubmit , formState: { errors }} = useForm({\n        resolver : yupResolver(schema)\n    });\n\n    \n    const onSubmit = data => {\n        console.log(data);\n    }\n\n\n    return (\n        <div className=\"contact\">\n            <h1>Contact us</h1>\n\n            <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n            {\n                inputs.map((input,key) => \n                <FormInput2 \n                    label = {input.name}\n                    type = {input.type}\n                    re = {register(input.name)}\n                    errors = {errors}\n                    key={key}\n                    textarea = {input.name === \"message\" ? true : false}\n                />\n            )\n            }\n            <Button loading={true} width={\"100%\"}>send</Button>\n\n        </form>\n\n        </div>\n    )\n}\n\nexport default Contact\n"]},"metadata":{},"sourceType":"module"}