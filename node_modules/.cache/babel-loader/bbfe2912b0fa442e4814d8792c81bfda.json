{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/houd/myBlog/src/pages/articlepage/articlepage.page.jsx\";\nimport React from 'react';\nimport './articlepage.styes.scss';\nimport { data } from '../../data/index';\nimport parse from 'html-react-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Ad() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"google\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GOOGLE ADSENSE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 33\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Ad;\n\nfunction Articlepage({\n  match\n}) {\n  const {\n    category,\n    slug\n  } = match.params;\n  const title = slug.replaceAll(\"-\", \" \").replaceAll(\"=\", \"?\");\n  let article = null;\n  data.forEach(item => {\n    if (item.title === title && category === item.category) article = item;\n  });\n  const nv = article.articleContent.split(\"GOOGLEADSENSE\");\n  console.log(nv);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"articlepage container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/images/${article.id}.jpeg`,\n      alt: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"articlepage__content\",\n      children: [parse(nv[0]), /*#__PURE__*/_jsxDEV(Ad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }, this), parse(nv[1])]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Articlepage;\nexport default Articlepage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Ad\");\n$RefreshReg$(_c2, \"Articlepage\");","map":{"version":3,"sources":["/Users/mac/Desktop/houd/myBlog/src/pages/articlepage/articlepage.page.jsx"],"names":["React","data","parse","Ad","Articlepage","match","category","slug","params","title","replaceAll","article","forEach","item","nv","articleContent","split","console","log","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,SAASC,EAAT,GAAa;AACT,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;KAJQA,E;;AAQT,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA8B;AAE1B,QAAM;AAACC,IAAAA,QAAD;AAAYC,IAAAA;AAAZ,MAAoBF,KAAK,CAACG,MAAhC;AACA,QAAMC,KAAK,GAAGF,IAAI,CAACG,UAAL,CAAgB,GAAhB,EAAoB,GAApB,EAAyBA,UAAzB,CAAoC,GAApC,EAAwC,GAAxC,CAAd;AACA,MAAIC,OAAO,GAAG,IAAd;AAGAV,EAAAA,IAAI,CAACW,OAAL,CAAaC,IAAI,IAAI;AACjB,QAAGA,IAAI,CAACJ,KAAL,KAAeA,KAAf,IAAwBH,QAAQ,KAAKO,IAAI,CAACP,QAA7C,EAAuDK,OAAO,GAAGE,IAAV;AAC1D,GAFD;AAKA,QAAMC,EAAE,GAAGH,OAAO,CAACI,cAAR,CAAuBC,KAAvB,CAA6B,eAA7B,CAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACA;AAAA,gBAAKH,OAAO,CAACF;AAAb;AAAA;AAAA;AAAA;AAAA,YADA,eAEI;AAAM,MAAA,GAAG,EAAG,WAAUE,OAAO,CAACQ,EAAG,OAAjC;AAAyC,MAAA,GAAG,EAAER,OAAO,CAACF;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGA;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,iBAECP,KAAK,CAACY,EAAE,CAAC,CAAD,CAAH,CAFN,eAGC,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA,cAHD,EAICZ,KAAK,CAACY,EAAE,CAAC,CAAD,CAAH,CAJN;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;MA/BQV,W;AAiCT,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport './articlepage.styes.scss';\nimport {data} from '../../data/index';\n\nimport parse from 'html-react-parser';\n\nfunction Ad(){\n    return(\n        <div className=\"google\"><h1>GOOGLE ADSENSE</h1></div>\n    )\n}\n \n\n\nfunction Articlepage({match}) {\n\n    const {category , slug} = match.params;\n    const title = slug.replaceAll(\"-\",\" \").replaceAll(\"=\",\"?\");\n    let article = null;\n \n    \n    data.forEach(item => {\n        if(item.title === title && category === item.category) article = item;\n    }) \n    \n\n    const nv = article.articleContent.split(\"GOOGLEADSENSE\");\n    console.log(nv);\n    \n    \n    \n\n    return (\n        <div className=\"articlepage container\">\n        <h1>{article.title}</h1>\n            <img  src={`/images/${article.id}.jpeg`} alt={article.title}/>\n        <div className=\"articlepage__content\">\n        \n        {parse(nv[0])}\n        {<Ad />}\n        {parse(nv[1])}\n        \n        </div>\n        </div>\n    )\n}\n\nexport default Articlepage\n\n "]},"metadata":{},"sourceType":"module"}